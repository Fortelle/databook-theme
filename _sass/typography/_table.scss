.l-typography {
  --db-cell-padding-topbottom: .6rem;
  --db-cell-padding-leftright: .8rem;
  --db-row-padding-leftright: .8rem;
  --db-cell-bold-border: 2px;
  --db-cell-border-row: var(--db-border-color);
  --db-cell-border-column: var(--db-border-color);

  table:not(.rouge-table) {
    border: 1px solid var(--db-border-color);
    border-collapse: separate;
    border-radius: $border-radius-object;
    border-spacing: 0;
    margin-top: 1rem;
    margin-bottom: 1rem;
    overflow: hidden;
    width: 100%;

    th,
    td {
      padding: var(--db-cell-padding-topbottom) var(--db-cell-padding-leftright);
      border-bottom: 1px solid var(--db-cell-border-row);
      border-right: 1px solid var(--db-cell-border-column);

      &:first-child {
        padding-left: var(--db-row-padding-leftright);
      }
      

      &:last-child {
        padding-right: var(--db-row-padding-leftright);
      }
    }

    >*:last-child>tr:last-child>* {
      border-bottom: none;
    }

    >*>tr>*:last-child {
      border-right: none;
    }

    +.h-table--combined {
      margin-top: calc(-1rem - 1px) !important;
      border-top: none !important;
      border-top-left-radius: 0 !important;
      border-top-right-radius: 0 !important;
    }
  }

}

.h-table--small {
  --db-cell-padding-topbottom: .2rem;
  --db-cell-padding-leftright: .4rem;
  --db-row-padding-leftright: .4rem;
  font-size: small;
}

.h-table--row {
  --db-cell-padding-leftright: .1rem;
  --db-cell-border-column: transparent;
}

.h-table--column {
  --db-cell-border-row: transparent;
  --db-cell-bold-border: 1px;
}

.h-table--grid {
  --db-cell-border-row: var(--db-border-color);
  --db-cell-border-column: var(--db-border-color);
}

.h-table--striped {

  >tbody:first-child>tr:nth-child(even),
  >tbody:not(:first-child)>tr:nth-child(odd) {
    background-color: var(--db-highlight-color);
  }
}

.h-table--hover {
  >tbody>tr:hover {
    background-color: var(--db-highlight-color-hover);
  }
}

.h-table--hover.h-table--column {

  // todo
  td:hover {}
}

.h-table--left {
  text-align: left;
}

.h-table--center {
  text-align: center;
}

.h-table--right {
  text-align: right;
}

.h-table--justify {
  text-align: justify;
}

.h-table--top td {
  vertical-align: top;
}

.h-table--middle td {
  vertical-align: middle;
}

.h-table--bottom td {
  vertical-align: bottom;
}



.js-tablesorter-header {
  cursor: pointer;
  position: relative;
  $triangle-height: 1.732 / 2 * 50%;
  $inactive-color: #00000033;
  $active-color: var(--db-text-color-active);
  background-position: right;
  background-size: .5em 1em;
  background-repeat: no-repeat;
  padding-right: 1em !important;

  &::after {
    --top-color: #{$inactive-color};
    --bottom-color: #{$inactive-color};

    background: linear-gradient(180deg, var(--top-color) 50%,  var(--bottom-color) 50%);
    clip-path: polygon(
      0% #{$triangle-height},
      50% 0%,
      100% #{$triangle-height},
      0% #{$triangle-height},

      0% #{100% - $triangle-height},
      100% #{100% - $triangle-height},
      50% 100%,
      0% #{100% - $triangle-height}
      );
    content: '';
    display: block;
    float: right;
    height: 1em;
    margin-right: .25em;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: .5em;
  }

  &-up {
    &::after {
      --top-color: #{$active-color};
    }
  }

  &-down {
    &::after {
      --bottom-color: #{$active-color};
    }
  }
}

.c-table-pagination {
  margin: 1rem 0;
  display: flex;
  justify-content: flex-end;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;

  &__item {
    min-width: 2rem;
    border: 1px solid var(--db-border-color);
    margin: .2rem 0;
    text-align: center;
    overflow: hidden;
    line-height: 2rem;
    display: block;

    &:first-child {
      border-radius: $border-radius-object 0 0 $border-radius-object;
    }
    &:last-child {
      border-radius: 0 $border-radius-object $border-radius-object 0;
    }
    
    &:not(:first-child) {
      margin-left: -1px;
    }

    &.is-disabled,
    &.is-disabled:hover {
      color: var(--db-text-color-disabled);
    }

    &:not(.is-disabled){
      cursor: pointer;
    }
  }

  
  &::before {
    content: attr(data-text);
    display: block;
    margin: .2rem 1rem;
    white-space: nowrap;
  }
}
